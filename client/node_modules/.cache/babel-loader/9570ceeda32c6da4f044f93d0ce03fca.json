{"ast":null,"code":"var _jsxFileName = \"/home/mann/go-grocery/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unSubscribeFromSnapshot = null;\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unSubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mann/go-grocery/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionPage","CollectionsOverview","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","Component","constructor","unSubscribeFromSnapshot","state","isLoading","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAE;AACX;AADW,SASbC,uBATa,GASa,IATb;AAGX,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAID;;AAIDC,EAAAA,iBAAiB,GAAE;AAGjB,UAAM;AAACP,MAAAA;AAAD,QAAsB,KAAKQ,KAAjC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKN,uBAAL,GAA+BK,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACzE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACD,KAH8B,CAA/B;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAErB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhCoC;;AAmCvC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAEa,cAAc,IAAIK,QAAQ,CAAClB,iBAAiB,CAACa,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAMuB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport {connect} from 'react-redux'\n\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      isLoading: true\n    }\n\n  }\n\n  unSubscribeFromSnapshot = null;\n\n  componentDidMount(){\n\n\n    const {updateCollections} = this.props;\n    const collectionRef = firestore.collection('collections');\n\n    this.unSubscribeFromSnapshot = collectionRef.onSnapshot( async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    })\n  }\n\n  render() {\n    const {match} = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}