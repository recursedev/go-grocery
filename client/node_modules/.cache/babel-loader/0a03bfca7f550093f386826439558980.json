{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('I\\'m hired');\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // collectionRef\n  // \t.get()\n  // \t.then((snapshot) => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n  // \t})\n  //   .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/mann/go-grocery/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SACEC,sBADF,EAEEC,sBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,oBAAV,GAAgC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAG;AAED,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC;AAED,GAND,CAME,OAAMG,KAAN,EAAY,CAEb,CAXoC,CAerC;AACA;AACA;AACA;AACA;AACA;AACE;;AAIH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACrC,QAAMhB,SAAS,CACbE,eAAe,CAACe,uBADH,EAEbV,oBAFa,CAAf;AAGD","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n  fetchCollectionSuccess,\r\n  fetchCollectionFailure\r\n} from './shop.actions'\r\n\r\nexport function* fetchCollectionAsync(){\r\n  yield console.log('I\\'m hired')\r\n\r\n  try{\r\n    \r\n    const collectionRef = firestore.collection(\"collections\");\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n    \r\n  } catch(error){\r\n    \r\n  }\r\n\r\n\r\n  \r\n  // collectionRef\r\n\t\t// \t.get()\r\n\t\t// \t.then((snapshot) => {\r\n\t\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t// \t})\r\n    //   .catch((error) => dispatch(fetchCollectionFailure(error.message)));\r\n      \r\n\r\n\r\n}\r\n\r\nexport function* fetchCollectionStart(){\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START, \r\n    fetchCollectionAsync)\r\n}"]},"metadata":{},"sourceType":"module"}