{"ast":null,"code":"var _jsxFileName = \"/home/mann/go-grocery/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, email } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, \"Sign in with your email address and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"password\",\n      required: true,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \" sign in  \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \" Sign in with Google \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/mann/go-grocery/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","SignInContainer","SignInTitle","ButtonsBarContainer","FormInput","CustomButton","googleSignInStart","email","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","password","state","auth","signInWithEmailAndPassword","setState","error","console","message","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  {connect} from 'react-redux'\n\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer\n  } from './sign-in.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nimport {googleSignInStart ,email} from '../../redux/user/user.actions'\n\n\nclass SignIn extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email:'',\n            password:''\n        }\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        \n        const {email, password} = this.state;\n\n        try{\n            await auth.signInWithEmailAndPassword(email,password);\n            this.setState({email: '', password: ''})\n        }catch(error){\n            console.error(error.message)\n        }\n    }\n\n    handleChange = event =>{\n        const {value,name} = event.target;\n        this.setState({[name]: value})\n    }\n\n\n\n    render() {\n        const {googleSignInStart} = this.props;\n        return (\n\t\t\t<SignInContainer>\n\t\t\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t\t\t<span>Sign in with your email address and password</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n                    <FormInput \n                        name=\"email\" \n                        type = \"email\"  \n                        value={this.state.email} \n                        label=\"email\"\n                        required \n                        handleChange={this.handleChange} />\n                    <FormInput \n                        name=\"password\" \n                        type = \"password\" \n                        value={this.state.password} \n                        label=\"password\"\n                        required \n                        handleChange={this.handleChange}\n                        />\n                    <ButtonsBarContainer>\n                        <CustomButton type = \"submit\" > sign in  </CustomButton>\n                        <CustomButton \n                        type='button'\n                        onClick={googleSignInStart} \n                        isGoogleSignIn > Sign in with Google </CustomButton>\n                    </ButtonsBarContainer>\n                </form>\n\t\t\t</SignInContainer>\n\t\t);\n    }\n    \n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}