{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest;\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/mann/go-grocery/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAChD,MAAG;AACH,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA4BE,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACI,aAAa,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AACD,GAJC,CAIA,OAAOC,KAAP,EACF;AACE,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACA;AAED,OAAO,UAAUC,gBAAV,GAA4B;AACjC,MAAG;AACD,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAArB;AACA,UAAME,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EACF;AACE,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAGD,OAAO,UAAUI,eAAV,CAA2B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA3B,EAAyD;AAC9D,MAAI;AACF,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMZ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACF,GAHA,CAGC,OAAMF,KAAN,EAAa;AACd,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACA;AACD;AAGD,OAAO,UAAUS,mBAAV,GAA+B;AACpC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUU,kBAAV,GAA8B;AACnC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAGD,OAAO,UAAUS,kBAAV,GAA8B;AACnC,QAAM9B,UAAN;AACD;AAGD,OAAO,UAAU+B,SAAV,GAAqB;AAC1B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import {takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport {signInSuccess, signInFailure} from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\n\nexport function* getSnapShotFromUserAuth(userAuth){\n  try{\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n} catch (error) \n{\n  yield put(signInFailure(error))\n}\n}\n\nexport function* signInWithGoogle(){\n  try{\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) \n  {\n    yield put(signInFailure(error))\n  }\n}\n\n\nexport function* signInWithEmail( {payload: {email, password}} ){\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n\t} catch(error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\n\nexport function* onGoogleSignInStart(){\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail )\n}\n\n\nexport function* onCheckUserSession(){\n  yield takeLatest\n}\n\n\nexport function* userSagas(){\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}\n\n\n"]},"metadata":{},"sourceType":"module"}