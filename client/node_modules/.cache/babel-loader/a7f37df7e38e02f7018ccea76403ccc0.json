{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    yield console.log('Heloooooooooo');\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    console.log(user);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/home/mann/go-grocery/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","console","log","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\n\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signOut(){\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess())\n  } catch (error) {\n    yield put(signOutFailure(error))\n  }\n}\n\nexport function* signUp( { payload: { email, password, displayName }} ){\n  try {\n    yield console.log('Heloooooooooo')\n    const {user} = yield auth.createUserWithEmailAndPassword(email,password)\n    console.log(user)\n    yield put(signUpSuccess({user, additionalData: {displayName}}));\n  } catch (error) {\n    yield put(signUpFailure(error))\n  }\n}\n\nexport function* signInAfterSignUp( {payload: {user, additionalData}} ){\n  \n}\n\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\n\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\n\nexport function* onSignUpStart(){\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp )\n}\n\nexport function* onSignUpSuccess(){\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart),\n  call(onEmailSignInStart),\n  call(onCheckUserSession),\n  call(onSignOutStart),\n  call(onSignUpStart)\n])\n}\n\n\n"]},"metadata":{},"sourceType":"module"}