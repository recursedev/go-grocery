{"ast":null,"code":"var _jsxFileName = \"/home/mann/go-grocery/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/go-grocery-db/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections)); //  collectionRef.get().then(\n    //    (snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({loading:false});\n    //   }))\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/mann/go-grocery/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionPage","CollectionsOverview","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAGA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGL,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAF6B;AAAA,SAMvCC,uBANuC,GAMb,IANa;AAAA;;AAQvCC,EAAAA,iBAAiB,GAAE;AAGjB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,sGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFrB,EANiB,CASjB;AACA;AACA;AACA;AACA;AACA;AAED;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGZ,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAKZ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnCsC;;AAsCvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IAAID,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n  state = {\n    loading: true\n  };\n\nunSubscribeFromSnapshot = null;\n\ncomponentDidMount(){\n\n\n  const { updateCollections } = this.props;\n  const collectionRef = firestore.collection('collections');\n\n  fetch('https://firestore.googleapis.com/v1/projects/go-grocery-db/databases/(default)/documents/collections')\n  .then(response => response.json())\n  .then(collections => console.log(collections))\n  //  collectionRef.get().then(\n  //    (snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     updateCollections(collectionsMap);\n  //     this.setState({loading:false});\n  //   }))\n   \n}\n\nrender() {\n  const { match } = this.props;\n  const {loading} = this.state;\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> } />\n      <Route path={`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\n    </div>\n  )\n}\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}