{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch;\n      this.setState({\n        isLoading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/mann/go-grocery/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","isLoading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEFS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACtC,YAAMT,cAAc,GAAGL,+BAA+B,CAACc,QAAD,CAAtD;AACAL,MAAAA,QAAQ;AACR,WAAKM,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACE,KAJH;AAMC,GAVD;AAWD,CAZM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n\t\tcollectionRef.get().then((snapshot) => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tdispatch\n\t\t\tthis.setState({ isLoading: false });\n    });\n    \n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}