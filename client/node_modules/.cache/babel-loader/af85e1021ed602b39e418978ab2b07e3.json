{"ast":null,"code":"var _jsxFileName = \"/home/mann/go-grocery/src/components/sign-up/sign-up.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signUpStart\n      } = this.props;\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Password Don't Match\");\n        return;\n      }\n\n      try {} catch (error) {} // try{\n      // \tconst {user} = await auth.createUserWithEmailAndPassword(email, password);\n      // \tawait createUserProfileDocument(user, {displayName});\n      // \tthis.setState({\n      // \t\tdisplayName: \"\",\n      // \t\temail: \"\",\n      // \t\tpassword: \"\",\n      // \t\tconfirmPassword: \"\",\n      // \t});\n      // }catch(error){\n      // \tconsole.error(error.message);\n      // }\n\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SignUpContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(SignUpTitle, {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: credentials => dispatch(signUpStart(credentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/mann/go-grocery/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","createUserProfileDocument","SignUpContainer","SignUpTitle","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","displayName","email","password","confirmPassword","state","alert","error","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {connect} from 'react-redux'\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nclass SignUp extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tdisplayName: \"\",\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t\tconfirmPassword: \"\",\n\t\t};\n\t}\n\n\thandleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst {signUpStart} = this.props;\n\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\n\n\t\tif(password !== confirmPassword) {\n\t\t\talert(\"Password Don't Match\");\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t\n\t\t} catch (error) {\n\t\t\t\n\t\t}\n\n\t\t// try{\n\t\t// \tconst {user} = await auth.createUserWithEmailAndPassword(email, password);\n\n\t\t// \tawait createUserProfileDocument(user, {displayName});\n\t\t// \tthis.setState({\n\t\t// \t\tdisplayName: \"\",\n\t\t// \t\temail: \"\",\n\t\t// \t\tpassword: \"\",\n\t\t// \t\tconfirmPassword: \"\",\n\t\t// \t});\n\t\t// }catch(error){\n\t\t// \tconsole.error(error.message);\n\t\t// }\n\t};\n\n\n\n\thandleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\trender() {\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\n\t\treturn (\n\t\t\t<SignUpContainer>\n\t\t\t\t<SignUpTitle className=\"title\">I do not have a account</SignUpTitle>\n\t\t\t\t<span>Sign up with your email and password</span>\n\t\t\t\t<form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\t\tvalue={displayName}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<CustomButton type=\"submit\">SIGN UP</CustomButton>\n\t\t\t\t</form>\n\t\t\t</SignUpContainer>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tsignUpStart: (credentials) => dispatch(signUpStart(credentials))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}